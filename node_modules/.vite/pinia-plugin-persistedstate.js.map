{
  "version": 3,
  "sources": ["../pinia-plugin-persistedstate/dist/chunk-WNM3IC4M.mjs", "../pinia-plugin-persistedstate/dist/index.mjs", "dep:pinia-plugin-persistedstate"],
  "sourcesContent": ["// src/core/normalize.ts\nfunction isObject(v) {\n  return typeof v === \"object\" && v !== null;\n}\nfunction normalizeOptions(options, factoryOptions) {\n  options = isObject(options) ? options : /* @__PURE__ */ Object.create(null);\n  return new Proxy(options, {\n    get(target, key, receiver) {\n      return Reflect.get(target, key, receiver) || Reflect.get(factoryOptions, key, receiver);\n    }\n  });\n}\n\n// src/core/pick.ts\nfunction get(state, path) {\n  return path.reduce((obj, p) => {\n    return obj == null ? void 0 : obj[p];\n  }, state);\n}\nfunction set(state, path, val) {\n  return path.slice(0, -1).reduce((obj, p) => {\n    if (!/^(__proto__)$/.test(p))\n      return obj[p] = obj[p] || {};\n    else\n      return {};\n  }, state)[path[path.length - 1]] = val, state;\n}\nfunction pick(baseState, paths) {\n  return paths.reduce((substate, path) => {\n    const pathArray = path.split(\".\");\n    return set(substate, pathArray, get(baseState, pathArray));\n  }, {});\n}\n\n// src/core/plugin.ts\nfunction hydrateStore(store, storage, serializer, key) {\n  try {\n    const fromStorage = storage == null ? void 0 : storage.getItem(key);\n    if (fromStorage)\n      store.$patch(serializer == null ? void 0 : serializer.deserialize(fromStorage));\n  } catch (_error) {\n  }\n}\nfunction createPersistedState(factoryOptions = {}) {\n  return (context) => {\n    const {\n      options: { persist },\n      store\n    } = context;\n    if (!persist)\n      return;\n    const persistences = (Array.isArray(persist) ? persist.map((p) => normalizeOptions(p, factoryOptions)) : [normalizeOptions(persist, factoryOptions)]).map(({\n      storage = localStorage,\n      beforeRestore = null,\n      afterRestore = null,\n      serializer = {\n        serialize: JSON.stringify,\n        deserialize: JSON.parse\n      },\n      key = store.$id,\n      paths = null\n    }) => ({\n      storage,\n      beforeRestore,\n      afterRestore,\n      serializer,\n      key,\n      paths\n    }));\n    persistences.forEach((p) => {\n      const { storage, serializer, key, paths, beforeRestore, afterRestore } = p;\n      beforeRestore == null ? void 0 : beforeRestore(context);\n      hydrateStore(store, storage, serializer, key);\n      afterRestore == null ? void 0 : afterRestore(context);\n      store.$subscribe((_mutation, state) => {\n        try {\n          const toStore = Array.isArray(paths) ? pick(state, paths) : state;\n          storage.setItem(key, serializer.serialize(toStore));\n        } catch (_error) {\n        }\n      }, {\n        detached: true\n      });\n    });\n    store.$hydrate = ({ runHooks = true } = {}) => {\n      persistences.forEach((p) => {\n        const { beforeRestore, afterRestore, storage, serializer, key } = p;\n        if (runHooks)\n          beforeRestore == null ? void 0 : beforeRestore(context);\n        hydrateStore(store, storage, serializer, key);\n        if (runHooks)\n          afterRestore == null ? void 0 : afterRestore(context);\n      });\n    };\n  };\n}\n\nexport {\n  createPersistedState\n};\n", "import {\n  createPersistedState\n} from \"./chunk-WNM3IC4M.mjs\";\n\n// src/index.ts\nvar src_default = createPersistedState();\nexport {\n  createPersistedState,\n  src_default as default\n};\n", "import d from \"./node_modules/pinia-plugin-persistedstate/dist/index.mjs\";export default d;\nexport * from \"./node_modules/pinia-plugin-persistedstate/dist/index.mjs\""],
  "mappings": ";;;AACA,kBAAkB,GAAG;AACnB,SAAO,OAAO,MAAM,YAAY,MAAM;AAAA;AAExC,0BAA0B,SAAS,gBAAgB;AACjD,YAAU,SAAS,WAAW,UAA0B,OAAO,OAAO;AACtE,SAAO,IAAI,MAAM,SAAS;AAAA,IACxB,IAAI,QAAQ,KAAK,UAAU;AACzB,aAAO,QAAQ,IAAI,QAAQ,KAAK,aAAa,QAAQ,IAAI,gBAAgB,KAAK;AAAA;AAAA;AAAA;AAMpF,aAAa,OAAO,MAAM;AACxB,SAAO,KAAK,OAAO,CAAC,KAAK,MAAM;AAC7B,WAAO,OAAO,OAAO,SAAS,IAAI;AAAA,KACjC;AAAA;AAEL,aAAa,OAAO,MAAM,KAAK;AAC7B,SAAO,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,KAAK,MAAM;AAC1C,QAAI,CAAC,gBAAgB,KAAK;AACxB,aAAO,IAAI,KAAK,IAAI,MAAM;AAAA;AAE1B,aAAO;AAAA,KACR,OAAO,KAAK,KAAK,SAAS,MAAM,KAAK;AAAA;AAE1C,cAAc,WAAW,OAAO;AAC9B,SAAO,MAAM,OAAO,CAAC,UAAU,SAAS;AACtC,UAAM,YAAY,KAAK,MAAM;AAC7B,WAAO,IAAI,UAAU,WAAW,IAAI,WAAW;AAAA,KAC9C;AAAA;AAIL,sBAAsB,OAAO,SAAS,YAAY,KAAK;AACrD,MAAI;AACF,UAAM,cAAc,WAAW,OAAO,SAAS,QAAQ,QAAQ;AAC/D,QAAI;AACF,YAAM,OAAO,cAAc,OAAO,SAAS,WAAW,YAAY;AAAA,WAC7D,QAAP;AAAA;AAAA;AAGJ,8BAA8B,iBAAiB,IAAI;AACjD,SAAO,CAAC,YAAY;AAClB,UAAM;AAAA,MACJ,SAAS,EAAE;AAAA,MACX;AAAA,QACE;AACJ,QAAI,CAAC;AACH;AACF,UAAM,eAAgB,OAAM,QAAQ,WAAW,QAAQ,IAAI,CAAC,MAAM,iBAAiB,GAAG,mBAAmB,CAAC,iBAAiB,SAAS,kBAAkB,IAAI,CAAC;AAAA,MACzJ,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,aAAa;AAAA,QACX,WAAW,KAAK;AAAA,QAChB,aAAa,KAAK;AAAA;AAAA,MAEpB,MAAM,MAAM;AAAA,MACZ,QAAQ;AAAA,UACH;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAEF,iBAAa,QAAQ,CAAC,MAAM;AAC1B,YAAM,EAAE,SAAS,YAAY,KAAK,OAAO,eAAe,iBAAiB;AACzE,uBAAiB,OAAO,SAAS,cAAc;AAC/C,mBAAa,OAAO,SAAS,YAAY;AACzC,sBAAgB,OAAO,SAAS,aAAa;AAC7C,YAAM,WAAW,CAAC,WAAW,UAAU;AACrC,YAAI;AACF,gBAAM,UAAU,MAAM,QAAQ,SAAS,KAAK,OAAO,SAAS;AAC5D,kBAAQ,QAAQ,KAAK,WAAW,UAAU;AAAA,iBACnC,QAAP;AAAA;AAAA,SAED;AAAA,QACD,UAAU;AAAA;AAAA;AAGd,UAAM,WAAW,CAAC,EAAE,WAAW,SAAS,OAAO;AAC7C,mBAAa,QAAQ,CAAC,MAAM;AAC1B,cAAM,EAAE,eAAe,cAAc,SAAS,YAAY,QAAQ;AAClE,YAAI;AACF,2BAAiB,OAAO,SAAS,cAAc;AACjD,qBAAa,OAAO,SAAS,YAAY;AACzC,YAAI;AACF,0BAAgB,OAAO,SAAS,aAAa;AAAA;AAAA;AAAA;AAAA;;;ACtFvD,IAAI,cAAc;;;ACLwD,IAAO,sCAAQ;",
  "names": []
}
